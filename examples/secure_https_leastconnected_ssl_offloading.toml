#
# This exaple uses SSL Offloading
# It is more secure for using TLS communication between the cluster and the local webserver
#


[cluster]
  binding = "localhost"
  name = "MY_GLB_POOL"
  nodes = ["localhost", "remotehost"]
  secretkey = "yourclusterkey"
  [cluster.settings.tls]
    certificatekey = "build/test/ssl/self_signed_certificate.key"
    certificatefile = "build/test/ssl/self_signed_certificate.crt"
    insecureskipverify = true

[web]
  [web.tls]
    certificatekey = "build/test/ssl/self_signed_certificate.key"
    certificatefile = "build/test/ssl/self_signed_certificate.crt"

[dns]
  binding = "localhost"
  port = 15353
  [dns.domains."domain.nl"]
    ttl = 11
  [dns.domains."domain.nl".soa]

[loadbalancer.settings]
  default_balance_method = "roundrobin"

[loadbalancer.pools.INTERNAL_VIP.backends.myotherapp]
  [loadbalancer.pools.INTERNAL_VIP.listener]
    ip = "127.0.0.1"
    port = 8080
    mode = "https"
    [loadbalancer.pools.INTERNAL_VIP.listener.tls]
      certificatekey = "build/test/ssl/self_signed_certificate.key"
      certificatefile = "build/test/ssl/self_signed_certificate.crt"

  [loadbalancer.pools.INTERNAL_VIP.backends.myotherapp.dnsentry]
    hostnames = ["default"]
    connectmode="http"
  [loadbalancer.pools.INTERNAL_VIP.backends.myotherapp.dnsentry]
    domain = "domain.nl"
    hostnames = "www"
    ttl = 30
  [loadbalancer.pools.INTERNAL_VIP.backends.myotherapp.healthcheck]
    type = "tcpconnect"
  [[loadbalancer.pools.INTERNAL_VIP.backends.myotherapp.nodes]]
    hostname = "webserver1"
    ip = "1.2.3.4"
    port = 80
  [[loadbalancer.pools.INTERNAL_VIP.backends.myotherapp.nodes]]
    hostname = "webserver2"
    ip = "2.3.4.5"
    port = 80
